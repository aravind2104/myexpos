//Process Manager Module
alias functionNum R1;
alias currentPID R2;

//Free User Area Page
if(functionNum==2) then
    alias usrAreaPage R3;
    usrAreaPage = [PROCESS_TABLE + currentPID*16 + 11];
    multipush(R1,R2);
    R1=2;
    R2=usrAreaPage;
    call MOD_2;
    multipop(R1,R2);
    return;
endif;

//Exit Process
if(functionNum==3) then
    multipush(R1,R2);
    R1=4;
    call MOD_1; //Free Page Table
    R1=2;
    call MOD_1; //Free User Area Page
    multipop(R1,R2);
    [PROCESS_TABLE + currentPID*16 + 4] = TERMINATED;
    return;
endif;

//Free Page Table
if(functionNum==4) then
    [PAGE_TABLE_BASE + 20*currentPID + 0] = -1;
    [PAGE_TABLE_BASE + 20*currentPID + 1] = "0000";
    [PAGE_TABLE_BASE + 20*currentPID + 2] = -1;
    [PAGE_TABLE_BASE + 20*currentPID + 3] = "0000";
    R3 = 4;
    R4 = PAGE_TABLE_BASE + 20*currentPID;
    while(R3<20) do
        if([R3+R4]!=-1)then
            R1 = 2;
            R2 = [R3+R4];
            multipush(R1,R2,R3,R4);
            call MOD_2;
            multipop(R1,R2,R3,R4);
        endif;
        [R4+R3] = -1;
        [R4+R3+1] = "0000";
        R3=R3+2;
    endwhile;

    //Release block entries of Heap and Stack
    R5 = currentPID;
    R4 = 2;
    while(R4<=3) do
        if([DISK_MAP_TABLE + 10*R5 + R4]!=-1) then
            multipush(R0,R1,R2,R3,R4,R5);
            R1 = 4;
            R2 = [DISK_MAP_TABLE + 10*R5 + R4];
            R3 = R5;
            call MOD_2;
            multipop(R0,R1,R2,R3,R4,R5);
        endif;
        if([DISK_MAP_TABLE + 10*R5 + R4 + 6]!=-1) then
            multipush(R0,R1,R2,R3,R4,R5);
            R1 = 4;
            R2 = [DISK_MAP_TABLE + 10*R5 + R4];
            R3 = R5;
            call MOD_2;
            multipop(R0,R1,R2,R3,R4,R5);
        endif;
        R4 = R4 + 1;
    endwhile;

    //Invalidate all entries of disk map table
    R4 = 0;
    while(R4 < 10) do
        [DISK_MAP_TABLE + 10*currentPID + R4] = -1;
        R4 = R4 + 1;
    endwhile;
    return;
endif;

return;