//Init
loadi(65,7);
loadi(66,8);
//Exception
loadi(2,15);
loadi(3,16);
//library
loadi(63,13);
loadi(64,14);
//Timer
loadi(4,17);
loadi(5,18);
//Disk ISR(INT 2)
loadi(6,19);
loadi(7,20);
//Console(INT 3)
loadi(8,21);
loadi(9,22);
//INT 6
loadi(14,27);
loadi(15,28);
//INT 7
loadi(16,29);
loadi(17,30);
//INT 8(fork)
loadi(18,31);
loadi(19,32);
//INT 9
loadi(20,33);
loadi(21,34);
//INT 10
loadi(22,35);
loadi(23,36);
//INT 11
loadi(24,37);
loadi(25,38);
//INT15
loadi(32,45);
loadi(33,46);
//Module 0
loadi(40,53);
loadi(41,54);
//Module 1
loadi(42,55);
loadi(43,56);
//Module 2
loadi(44,57);
loadi(45,58);
//Module 4
loadi(48,61);
loadi(49,62);
//Module 5
loadi(50,63);
loadi(51,64);
//Inode Table
loadi(59,3);
loadi(60,4);
//Disk Free list
loadi(61,2);

[TERMINAL_STATUS_TABLE] = 0;

[DISK_STATUS_TABLE] = 0;

//Initializing Memory Free list
//Till Page 75 is reserved for OS
alias i R0;
i = 0;
while(i<=82) do
    [MEMORY_FREE_LIST + i]=1;
    i=i+1;
endwhile;
i = 83;
while(i<128) do
    [MEMORY_FREE_LIST + i]=0;
    i=i+1;
endwhile;

//Initiailize WAIT_MEM_COUNT to 0 and MEM_FREE_COUNT to no of free pages
[SYSTEM_STATUS_TABLE + 3] = 0;
[SYSTEM_STATUS_TABLE + 2] = 45; //127-82

//PER PROCESS DISK MAP TABLE 
//Initiailizing Disk Map Table entries for INIT process
i = 0;
while(i<10) do 
    [DISK_MAP_TABLE + 10 + i] = -1;
    i = i + 1;
endwhile;
[DISK_MAP_TABLE + 10 + 4] = 7;
[DISK_MAP_TABLE + 10 + 5] = 8;

//Init Process with PID=1
PTBR=PAGE_TABLE_BASE+20;
PTLR=10;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

//Process Table
[PROCESS_TABLE + 16 + 11] = 80;
[PROCESS_TABLE + 16 + 1] = 1;
[PROCESS_TABLE + 16 + 13] = 8*512;
[PROCESS_TABLE + 16 + 4] = CREATED;
[PROCESS_TABLE + 16 + 14] = PTBR;
[PROCESS_TABLE + 16 + 15] = 10;
[PROCESS_TABLE + 16 + 12] = 0;

//Per Process Table for INIT process (-1 in this stage)
i = 496;
while(i < 512)do
    [80*512 + i] = -1;
    i = i + 1;
endwhile;

[76*512] = [65*512 + 1];


alias id R1;
id = 2;
while(id<=15) do
    [PROCESS_TABLE + 16*id + 4] = TERMINATED;
    id = id+1;
endwhile;

return;
