//Module 7
loadi(54,67);
loadi(55,68);
//Idle
loadi(69,11);

SP = 76*512-1;

breakpoint;
call BOOT_MODULE;
breakpoint;

//Idle Process, PID=0
PTBR=PAGE_TABLE_BASE;
PTLR=10;

//Library
[PTBR + 0] = -1;
[PTBR + 1] = "0000";
[PTBR + 2] = -1;
[PTBR + 3] = "0000";

//Heap
[PTBR + 4] = -1;
[PTBR + 5] = "0000";
[PTBR + 6] = -1;
[PTBR + 7] = "0000";

//Code
[PTBR + 8] = 69;
[PTBR + 9] = "0100";
[PTBR + 10] = -1;
[PTBR + 11] = "0000";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1;
[PTBR + 15] = "0000";

//Stack
[PTBR + 16] = 70;
[PTBR + 17] = "0110";
[PTBR + 18] = -1;
[PTBR + 19] = "0000";

//Process Table
[PROCESS_TABLE + 0] = 0; //Tick
[PROCESS_TABLE + 1] = 0; //Pid
[PROCESS_TABLE + 3] = 0; //Userid
[PROCESS_TABLE + 4] = RUNNING;//State
[PROCESS_TABLE + 11] = 76; //User Area Page no
[PROCESS_TABLE + 12] = 0; //KPTR
[PROCESS_TABLE + 13] = 8*512; //UPTR
[PROCESS_TABLE + 14] = PAGE_TABLE_BASE; //PTBR
[PROCESS_TABLE + 15] = 10; //PTLR


//Per Process Table for IDLE process
R1 = 496;
while(R1 < 512)do
    [76*512 + R1] = -1;
    R1 = R1 + 1;
endwhile;

//Store IP Value on top of stack
[70*512] = [69*512 + 1];

//Swapper Daemon, PID=15
PTBR=PAGE_TABLE_BASE + 15*20;
//Library
[PTBR + 0] = -1;
[PTBR + 1] = "0000";
[PTBR + 2] = -1;
[PTBR + 3] = "0000";

//Heap
[PTBR + 4] = -1;
[PTBR + 5] = "0000";
[PTBR + 6] = -1;
[PTBR + 7] = "0000";

//Code
[PTBR + 8] = 69;
[PTBR + 9] = "0100";
[PTBR + 10] = -1;
[PTBR + 11] = "0000";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1;
[PTBR + 15] = "0000";

//Stack
[PTBR + 16] = 81;
[PTBR + 17] = "0110";
[PTBR + 18] = -1;
[PTBR + 19] = "0000";

//Process Table
R1 = PROCESS_TABLE + 15*16;
[R1 + 0] = 0; //Tick
[R1 + 1] = 15; //Pid
[R1 + 3] = 0; //Userid
[R1 + 4] = CREATED;//State
[R1 + 11] = 82; //User Area Page no
[R1 + 12] = 0; //KPTR
[R1 + 13] = 8*512; //UPTR
[R1 + 14] = PAGE_TABLE_BASE + 15*20; //PTBR
[R1 + 15] = 10; //PTLR


//Store IP Value on top of stack
[81*512] = [69*512 + 1];

[SYSTEM_STATUS_TABLE + 1] = 0;//Idle is current process
PTBR = PAGE_TABLE_BASE;
PTLR = 10;


SP = 8*512;
breakpoint;
ireturn;
