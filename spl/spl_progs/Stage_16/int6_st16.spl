//Set the MODE FLAG in the process table of the current process to the system call number which is 7 for read system call.
breakpoint;
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 9] = 7;

alias userSP R0;
userSP = SP;

//User Stack to Kernel Stack
[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 13] = userSP;
SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 11]*512 - 1;

alias physicalPageNum R1;
alias offset R2;
alias fileDescPhysicalAddr R3;
physicalPageNum = [PTBR + 2*((userSP-4)/512)];
offset = (userSP-4)%512;
fileDescPhysicalAddr = (physicalPageNum*512)+offset;
alias fileDescriptor R4;
fileDescriptor = [fileDescPhysicalAddr];

if(fileDescriptor != -1) then
    alias physicalAddrRetVal R5;
    physicalAddrRetVal = ([PTBR + 2*((userSP-1)/512)]*512) + ((userSP-1)%512);
    [physicalAddrRetVal] = -1;
else
    alias wordAddr R5;
    wordAddr = [[PTBR + 2*((userSP-3)/512)]*512 + ((userSP-3)%512)];
    multipush(R0,R1,R2,R3,R4,R5);
    R1 = 4;
    R2 = [SYSTEM_STATUS_TABLE + 1];
    R3 = wordAddr;
    call MOD_4;
    multipop(R0,R1,R2,R3,R4,R5);
    alias physicalAddrRetVal R6;
    physicalAddrRetVal = ([PTBR + 2*((userSP-1)/512)]*512) + ((userSP-1)%512);
    [physicalAddrRetVal] = 0;
endif;

[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1]*16) + 9] = 0;

//User Stack
SP = userSP;

//Return to user mode
breakpoint;
ireturn;



